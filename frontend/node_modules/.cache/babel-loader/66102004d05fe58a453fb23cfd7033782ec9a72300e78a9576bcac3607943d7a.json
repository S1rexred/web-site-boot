{"ast":null,"code":"var _jsxFileName = \"C:\\\\web-site-boot\\\\src\\\\Components\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport LoaderComponent from '../../helpers/loader/loaderComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const history = useHistory();\n  const [userName, setUserName] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n  const [loader, setShowHideLoader] = useState(false);\n  const formValidation = () => {\n    let isValid = true;\n    if (!userName) {\n      toast.warn('Username is required');\n      isValid = false;\n    }\n    if (!userPassword) {\n      toast.warn('User password is required');\n      isValid = false;\n    }\n    return isValid;\n  };\n  const submitUserLogin = async () => {\n    try {\n      // before submit, we need to check validation\n      if (formValidation()) {\n        // we need to add loading spinner to wait server to response.\n        // let create loader component\n        setShowHideLoader(true);\n        const reqBody = {\n          \"username\": userName,\n          \"password\": userPassword\n        };\n        const response = await axios.post('https://dummyjson.com/auth/login', reqBody);\n        if (response) {\n          // here we need to store data as temp and navigate to home page\n          history.push({\n            pathname: '/home',\n            state: {\n              userData: response.data\n            }\n          });\n\n          // now we navigated to home but with static data.\n          // let us go to home page.\n          // data will go to home page as props.\n        }\n      }\n    } catch (e) {\n      // log error in case of invalid user login username and password\n      // we will use Toaster to show the error to user\n      toast.error(e.response.data.message);\n    } finally {\n      setShowHideLoader(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-part\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-part\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Login Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Enter username\",\n            value: userName,\n            onChange: e => setUserName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form-control\",\n            placeholder: \"Enter password\",\n            value: userPassword,\n            onChange: e => setUserPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submit-action\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-btn\",\n            onClick: () => submitUserLogin(),\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), loader && /*#__PURE__*/_jsxDEV(LoaderComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"5DT5GXMKB41zPPI7r5+7CDzt0as=\", false, function () {\n  return [useHistory];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useHistory","axios","ToastContainer","toast","LoaderComponent","jsxDEV","_jsxDEV","Login","_s","history","userName","setUserName","userPassword","setUserPassword","loader","setShowHideLoader","formValidation","isValid","warn","submitUserLogin","reqBody","response","post","push","pathname","state","userData","data","e","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["C:/web-site-boot/src/Components/Login.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport LoaderComponent from '../../helpers/loader/loaderComponent';\r\n\r\n\r\nexport default function Login() {\r\n    const history = useHistory();\r\n\r\n    const [userName, setUserName] = useState('');\r\n    const [userPassword, setUserPassword] = useState('');\r\n    const [loader, setShowHideLoader] = useState(false);\r\n\r\n    const formValidation = () => {\r\n        let isValid = true;\r\n\r\n        if (!userName) {\r\n            toast.warn('Username is required');\r\n            isValid = false\r\n        }\r\n\r\n        if (!userPassword) {\r\n            toast.warn('User password is required');\r\n            isValid = false\r\n        }\r\n\r\n        return isValid\r\n    }\r\n\r\n    const submitUserLogin = async () => {\r\n        try {\r\n            // before submit, we need to check validation\r\n            if (formValidation()) {\r\n\r\n                // we need to add loading spinner to wait server to response.\r\n                // let create loader component\r\n                setShowHideLoader(true);\r\n                const reqBody = {\r\n                    \"username\": userName,\r\n                    \"password\": userPassword\r\n                }\r\n                const response = await axios.post('https://dummyjson.com/auth/login', reqBody);\r\n                if (response) {\r\n\r\n                    // here we need to store data as temp and navigate to home page\r\n                    history.push({\r\n                        pathname: '/home',\r\n                        state: { userData: response.data }\r\n                    });\r\n\r\n                    // now we navigated to home but with static data.\r\n                    // let us go to home page.\r\n                    // data will go to home page as props.\r\n                }\r\n            }\r\n\r\n        }\r\n        catch (e) {\r\n            // log error in case of invalid user login username and password\r\n            // we will use Toaster to show the error to user\r\n            toast.error(e.response.data.message);\r\n        }\r\n        finally {\r\n            setShowHideLoader(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='login-screen'>\r\n            <div className='login-form'>\r\n                <div className='left-part' />\r\n                <div className='right-part'>\r\n                    <h3>Login Account</h3>\r\n                    <div className='input-group'>\r\n                        <label>Username</label>\r\n                        <input\r\n                            type='text'\r\n                            className='form-control'\r\n                            placeholder='Enter username'\r\n                            value={userName}\r\n                            onChange={(e) => setUserName(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className='input-group'>\r\n                        <label>Password</label>\r\n                        <input\r\n                            type='password'\r\n                            className='form-control'\r\n                            placeholder='Enter password'\r\n                            value={userPassword}\r\n                            onChange={(e) => setUserPassword(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className='submit-action'>\r\n                        <button className='submit-btn' onClick={() => submitUserLogin()}>Login</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ToastContainer />\r\n            {loader && <LoaderComponent />}\r\n        </div>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}