{"ast":null,"code":"import axios from \"axios\";\nlet refresh = false;\naxios.interceptors.response.use(resp => resp, async error => {\n  if (error.response && error.response.status === 401 && !refresh) {\n    refresh = true;\n    console.log('Refresh token:', localStorage.getItem('refresh_token'));\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      withCredentials: true\n    };\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/token/refresh/', {\n        refresh: localStorage.getItem('refresh_token')\n      }, config);\n      if (response.status === 200) {\n        axios.defaults.headers.common['Authorization'] = `Bearer ${response.data.access}`;\n        localStorage.setItem('access_token', response.data.access);\n        localStorage.setItem('refresh_token', response.data.refresh);\n        return axios(error.config);\n      } else {\n        console.error('Не удалось обновить токен:', response);\n        // Здесь можно перенаправить на страницу входа или показать сообщение об ошибке\n      }\n    } catch (err) {\n      console.error('Ошибка при обновлении токена:', err);\n      // Здесь также можно обработать ошибку\n    } finally {\n      refresh = false; // Сброс флага в любом случае\n    }\n  }\n  return Promise.reject(error); // Возвращаем отклоненный промис для дальнейшей обработки\n});","map":{"version":3,"names":["axios","refresh","interceptors","response","use","resp","error","status","console","log","localStorage","getItem","config","headers","withCredentials","post","defaults","common","data","access","setItem","err","Promise","reject"],"sources":["C:/web-site-boot/src/Components/axios.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\nlet refresh = false;\r\n\r\naxios.interceptors.response.use(resp => resp, async error => {\r\n  if (error.response && error.response.status === 401 && !refresh) {\r\n    refresh = true;\r\n    console.log('Refresh token:', localStorage.getItem('refresh_token'));\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      withCredentials: true\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post('http://127.0.0.1:8000/token/refresh/', {\r\n        refresh: localStorage.getItem('refresh_token')\r\n      }, config);\r\n\r\n      if (response.status === 200) {\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${response.data.access}`;\r\n        localStorage.setItem('access_token', response.data.access);\r\n        localStorage.setItem('refresh_token', response.data.refresh);\r\n        return axios(error.config);\r\n      } else {\r\n        console.error('Не удалось обновить токен:', response);\r\n        // Здесь можно перенаправить на страницу входа или показать сообщение об ошибке\r\n      }\r\n    } catch (err) {\r\n      console.error('Ошибка при обновлении токена:', err);\r\n      // Здесь также можно обработать ошибку\r\n    } finally {\r\n      refresh = false; // Сброс флага в любом случае\r\n    }\r\n  }\r\n\r\n  return Promise.reject(error); // Возвращаем отклоненный промис для дальнейшей обработки\r\n});"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,IAAIC,OAAO,GAAG,KAAK;AAEnBD,KAAK,CAACE,YAAY,CAACC,QAAQ,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,EAAE,MAAMC,KAAK,IAAI;EAC3D,IAAIA,KAAK,CAACH,QAAQ,IAAIG,KAAK,CAACH,QAAQ,CAACI,MAAM,KAAK,GAAG,IAAI,CAACN,OAAO,EAAE;IAC/DA,OAAO,GAAG,IAAI;IACdO,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,CAAC;IAEpE,MAAMC,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,eAAe,EAAE;IACnB,CAAC;IAED,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMH,KAAK,CAACe,IAAI,CAAC,sCAAsC,EAAE;QACxEd,OAAO,EAAES,YAAY,CAACC,OAAO,CAAC,eAAe;MAC/C,CAAC,EAAEC,MAAM,CAAC;MAEV,IAAIT,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;QAC3BP,KAAK,CAACgB,QAAQ,CAACH,OAAO,CAACI,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUd,QAAQ,CAACe,IAAI,CAACC,MAAM,EAAE;QACjFT,YAAY,CAACU,OAAO,CAAC,cAAc,EAAEjB,QAAQ,CAACe,IAAI,CAACC,MAAM,CAAC;QAC1DT,YAAY,CAACU,OAAO,CAAC,eAAe,EAAEjB,QAAQ,CAACe,IAAI,CAACjB,OAAO,CAAC;QAC5D,OAAOD,KAAK,CAACM,KAAK,CAACM,MAAM,CAAC;MAC5B,CAAC,MAAM;QACLJ,OAAO,CAACF,KAAK,CAAC,4BAA4B,EAAEH,QAAQ,CAAC;QACrD;MACF;IACF,CAAC,CAAC,OAAOkB,GAAG,EAAE;MACZb,OAAO,CAACF,KAAK,CAAC,+BAA+B,EAAEe,GAAG,CAAC;MACnD;IACF,CAAC,SAAS;MACRpB,OAAO,GAAG,KAAK,CAAC,CAAC;IACnB;EACF;EAEA,OAAOqB,OAAO,CAACC,MAAM,CAACjB,KAAK,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}